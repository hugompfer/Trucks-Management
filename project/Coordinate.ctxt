#BlueJ class context
comment0.params=latitude\ longitude
comment0.target=Coordinate(double,\ double)
comment0.text=\r\n\ Cria\ uma\ cordenada\ com\ a\ posi\u00E7\u00E3o\ X(Longitude)\ com\ o\ intervalo\ -180\ a\ 180,\ Y(Latitude)\ com\ o\ intervalo\ -90\ a\ 90.\r\n
comment1.params=
comment1.target=double\ getLatitude()
comment1.text=\r\n\ getLatitude\ -\ Metodo\ para\ retornar\ a\ latitude\ da\ cordenada.\r\n\ \r\n\ @return\ double\ -\ Latitude\ da\ posi\u00E7\u00E3o.\r\n
comment10.params=latitude\ longitude
comment10.target=boolean\ checkPosition(double,\ double)
comment10.text=\r\n\ checkPosition\ -\ Met\u00F3do\ que\ verifica\ se\ a\ posi\u00E7\u00E3o\ atual\ e\ igual\ a\ posi\u00E7ao\ pretendida.\r\n\ \r\n\ @return\ boolean-se\ a\ posi\u00E7\u00E3o\ for\ a\ mesma.\r\n\ @param\ double\ latitude-\ latitude\ pretendida\r\n\ @param\ double\ longitude-\ longitude\ pretendida\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ toString\ -\ Met\u00F3do\ que\ representa\ textualmente\ o\ objeto(latitude,longitude).\r\n\ \r\n\ @return\ String-\ Informa\u00E7\u00E3o\ da\ cordenada.\r\n
comment2.params=
comment2.target=double\ getLongitude()
comment2.text=\r\n\ getLongitude\ -\ Metodo\ para\ retornar\ a\ longitude\ da\ cordenada.\r\n\ \r\n\ @return\ double\ -\ Longitude\ da\ posi\u00E7\u00E3o.\r\n
comment3.params=latitude
comment3.target=void\ setLatitude(double)
comment3.text=\r\n\ setLatitude\ -\ Metodo\ para\ alterar\ a\ latitude\ da\ cordenada,\ com\ o\ intervalo\ -90\ a\ 90\r\n\ \r\n\ @param\ latitude\ -\ Nova\ latitude\ da\ cordenada.\r\n
comment4.params=longitude
comment4.target=void\ setLongitude(double)
comment4.text=\r\n\ setLongitude\ -\ Metodo\ para\ alterar\ a\ longitude\ da\ cordenada,\ com\ o\ intervalo\ -180\ a\ 180\r\n\ \r\n\ @param\ longitude\ -\ Nova\ longitude\ da\ cordenada.\r\n
comment5.params=
comment5.target=java.lang.String\ toStringLatiude()
comment5.text=\r\n\ toStringLatiude\ -\ Met\u00F3do\ que\ representa\ textualmente\ o\ latitude\ da\ cordenada(Sul,Norte).\r\n\ \r\n\ @return\ String-\ Informa\u00E7\u00E3o\ do\ latitude.\r\n
comment6.params=
comment6.target=java.lang.String\ toStringLongitude()
comment6.text=\r\n\ toStringLongitude\ -\ Met\u00F3do\ que\ representa\ textualmente\ o\ longitude\ da\ cordenada(Este,Oeste).\r\n\ \r\n\ @return\ String-\ Informa\u00E7\u00E3o\ da\ longitude.\r\n
comment7.params=latitude\ longitude
comment7.target=double\ getQuilometers(double,\ double)
comment8.params=latitude\ longitude
comment8.target=double\ calculateDistance(double,\ double)
comment9.params=distance\ latitude\ longitude
comment9.target=boolean\ isInRadius(float,\ double,\ double)
comment9.text=\r\n\ isInRadius\ -\ Met\u00F3do\ que\ verifica\ se\ a\ distancia\ entre\ a\ cordenada\ atual\ e\ a\ cordenada\ pretendia\ e\ menor\ que\ a\ distancia\ dada.\r\n\ \r\n\ @return\ boolean-\ True\ se\ for\ menor\ a\ distancia;false\ o\ contrario.\r\n\ @param\ float\ distance-\ raio\ maximo\r\n\ @param\ double\ latitude-\ latitude\ pretendida\r\n\ @param\ double\ longitude-\ longitude\ pretendida\r\n
numComments=12
